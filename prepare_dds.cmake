set( SEMADDS_LIBRARIES ${CMAKE_SOURCE_DIR})
if(${ARCH} STREQUAL "WIN32")
	set( SEMACLOUD_SDK ${SEMADDS_LIBRARIES}/lib/win)
	INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/include/win32/include)
else()
	set( SEMACLOUD_SDK ${SEMADDS_LIBRARIES}/lib/linux)
	INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/include/posix/include)
ENDIF()
	
#DDS
INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/include/cm)
INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/include/common)
INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/include/dcps/C++/SACPP)
INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/include/plugin)
INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/include/streams)
INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/include/sys)
INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/include/svr4)
INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/include/rmi)

#SEMA Cloud
INCLUDE_DIRECTORIES(${SEMACLOUD_SDK}/)
INCLUDE_DIRECTORIES(${SEMACLOUD_SDK}/dependencies/include)
INCLUDE_DIRECTORIES(${SEMACLOUD_SDK}/dwcore)
INCLUDE_DIRECTORIES(${SEMACLOUD_SDK}/ilslog)
INCLUDE_DIRECTORIES(${SEMACLOUD_SDK}/ilsstomp)
INCLUDE_DIRECTORIES(${SEMACLOUD_SDK}/ilsutil)
link_directories(${SEMACLOUD_SDK}/libraries/semacloud/)
link_directories(${SEMACLOUD_SDK}/libraries/dds/)

#SEMA DDS
INCLUDE_DIRECTORIES(${SEMADDS_LIBRARIES}/lib/semadds/inc)
link_directories(${SEMADDS_LIBRARIES}/lib/semadds/lib/)