//******************************************************************
//
//  Generated by IDL to C++ Translator
//
//  File name: dds_dcps_builtintopics.h
//  Source: /home/lee/ospl/ospli/etc/idl/dds_dcps_builtintopics.idl
//  Generated: Wed Jan 14 13:42:49 2015
//  OpenSplice V6.5.0b5
//
//******************************************************************
#ifndef _DDS_DCPS_BUILTINTOPICS_H_
#define _DDS_DCPS_BUILTINTOPICS_H_

#include "sacpp_mapping.h"
#include "dds_builtinTopics.h"


namespace DDS
{
   struct Time_t;
   struct DomainParticipantQos;
   struct TopicQos;
   struct DataWriterQos;
   struct PublisherQos;
   struct DataReaderQos;
   struct SubscriberQos;

   struct Time_t
   {
         Long sec;
         ULong nanosec;
   };

   struct DomainParticipantQos
   {
         UserDataQosPolicy user_data;
   };

   typedef DDS_DCPSStruct_var < DomainParticipantQos> DomainParticipantQos_var;
   typedef DDS_DCPSStruct_out < DomainParticipantQos> DomainParticipantQos_out;

   struct TopicQos
   {
         TopicDataQosPolicy topic_data;
         DurabilityQosPolicy durability;
         DurabilityServiceQosPolicy durability_service;
         DeadlineQosPolicy deadline;
         LatencyBudgetQosPolicy latency_budget;
         LivelinessQosPolicy liveliness;
         ReliabilityQosPolicy reliability;
         DestinationOrderQosPolicy destination_order;
         HistoryQosPolicy history;
         ResourceLimitsQosPolicy resource_limits;
         TransportPriorityQosPolicy transport_priority;
         LifespanQosPolicy lifespan;
         OwnershipQosPolicy ownership;
   };

   typedef DDS_DCPSStruct_var < TopicQos> TopicQos_var;
   typedef DDS_DCPSStruct_out < TopicQos> TopicQos_out;

   struct DataWriterQos
   {
         DurabilityQosPolicy durability;
         DeadlineQosPolicy deadline;
         LatencyBudgetQosPolicy latency_budget;
         LivelinessQosPolicy liveliness;
         ReliabilityQosPolicy reliability;
         DestinationOrderQosPolicy destination_order;
         HistoryQosPolicy history;
         ResourceLimitsQosPolicy resource_limits;
         TransportPriorityQosPolicy transport_priority;
         LifespanQosPolicy lifespan;
         UserDataQosPolicy user_data;
         OwnershipQosPolicy ownership;
         OwnershipStrengthQosPolicy ownership_strength;
         WriterDataLifecycleQosPolicy writer_data_lifecycle;
   };

   typedef DDS_DCPSStruct_var < DataWriterQos> DataWriterQos_var;
   typedef DDS_DCPSStruct_out < DataWriterQos> DataWriterQos_out;

   struct PublisherQos
   {
         PresentationQosPolicy presentation;
         PartitionQosPolicy partition;
         GroupDataQosPolicy group_data;
   };

   typedef DDS_DCPSStruct_var < PublisherQos> PublisherQos_var;
   typedef DDS_DCPSStruct_out < PublisherQos> PublisherQos_out;

   struct DataReaderQos
   {
         DurabilityQosPolicy durability;
         DeadlineQosPolicy deadline;
         LatencyBudgetQosPolicy latency_budget;
         LivelinessQosPolicy liveliness;
         ReliabilityQosPolicy reliability;
         DestinationOrderQosPolicy destination_order;
         HistoryQosPolicy history;
         ResourceLimitsQosPolicy resource_limits;
         UserDataQosPolicy user_data;
         OwnershipQosPolicy ownership;
         TimeBasedFilterQosPolicy time_based_filter;
         ReaderDataLifecycleQosPolicy reader_data_lifecycle;
   };

   typedef DDS_DCPSStruct_var < DataReaderQos> DataReaderQos_var;
   typedef DDS_DCPSStruct_out < DataReaderQos> DataReaderQos_out;

   struct SubscriberQos
   {
         PresentationQosPolicy presentation;
         PartitionQosPolicy partition;
         GroupDataQosPolicy group_data;
   };

   typedef DDS_DCPSStruct_var < SubscriberQos> SubscriberQos_var;
   typedef DDS_DCPSStruct_out < SubscriberQos> SubscriberQos_out;
}




#endif
